{
  "name": "private-pilot",
  "displayName": "Private Pilot",
  "description": "Automated code development assistant",
  "icon": "resources/icon.png",
  "publisher": "PrivatePilotTeam",
  "version": "0.1.0",
  "repository": {
    "type": "git",
    "url": "https://github.com/faridani/PrivatePilot.git"
  },
  "license": "Apache-2.0",
  "bugs": {
    "url": "https://github.com/faridani/PrivatePilot/issues"
  },
  "homepage": "https://github.com/faridani/PrivatePilot",
  "engines": {
    "vscode": "^1.80.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "private-pilot.improve",
        "title": "üß† Private Pilot: Improve this code"
      },
      {
        "command": "private-pilot.contextualimprove",
        "title": "üöÄ Private Pilot: Improve within the context of the file"
      },
      {
        "command": "private-pilot.explain",
        "title": "üí° Private Pilot: Explain"
      },
      {
        "command": "private-pilot.explain",
        "title": "üí° Private Pilot: Explain this code"
      },
      {
        "command": "private-pilot.fixTypos",
        "title": "üìù Private Pilot: Fix typos and grammar"
      },
      {
        "command": "private-pilot.writeComments",
        "title": "üí¨ Private Pilot: Write Comments"
      },
      {
        "command": "private-pilot.automatedReview",
        "title": "üîç Private Pilot: Automated Review"
      },
      {
        "command": "private-pilot.autoComment",
        "title": "‚úçÔ∏è Private Pilot: Auto Comment"
      },
      {
        "command": "private-pilot.createCode",
        "title": "üõ†Ô∏è Private Pilot: Create Code"
      },
      {
        "command": "private-pilot.askQuestion",
        "title": "‚ùì Private Pilot: Ask a question"
      },
      {
        "command": "private-pilot.rewriteCode",
        "title": "üîÑ Private Pilot: Rewrite with Ollama"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "submenu": "private-pilot.menu",
          "group": "navigation"
        }
      ],
      "private-pilot.menu": [
        {
          "command": "private-pilot.improve",
          "group": "1_code_actions@1",
          "when": "editorHasSelection"
        },
        {
          "command": "private-pilot.contextualimprove",
          "group": "1_code_actions@2",
          "when": "editorHasSelection"
        },
        {
          "command": "private-pilot.explain",
          "group": "1_code_actions@3",
          "when": "editorHasSelection"
        },
        {
          "command": "private-pilot.fixTypos",
          "group": "1_code_actions@4",
          "when": "editorHasSelection"
        },
        {
          "command": "private-pilot.writeComments",
          "group": "1_code_actions@5",
          "when": "editorHasSelection"
        },
        {
          "command": "private-pilot.automatedReview",
          "group": "1_code_actions@6",
          "when": "editorHasSelection"
        },
        {
          "command": "private-pilot.rewriteCode",
          "group": "1_code_actions@7",
          "when": "editorHasSelection"
        },
        {
          "command": "private-pilot.autoComment",
          "group": "1_code_actions@8",
          "when": "editorHasSelection"
        },
        {
          "command": "private-pilot.createCode",
          "group": "1_code_actions@9",
          "when": "editorHasSelection"
        },
        {
          "command": "private-pilot.askQuestion",
          "group": "1_code_actions@10",
          "when": "editorHasSelection"
        },
        {
          "command": "private-pilot.autoComment",
          "group": "2_empty_actions@1",
          "when": "!editorHasSelection"
        },
        {
          "command": "private-pilot.createCode",
          "group": "2_empty_actions@2",
          "when": "!editorHasSelection"
        },
        {
          "command": "private-pilot.askQuestion",
          "group": "2_empty_actions@3",
          "when": "!editorHasSelection"
        }
      ]
    },
    "submenus": [
      {
        "id": "private-pilot.menu",
        "label": "Private Pilot"
      }
    ],
    "configuration": {
      "title": "Code Rewriter",
      "properties": {
        "codeRewriter.provider": {
          "type": "string",
          "enum": ["ollama", "openai", "grok", "claude"],
          "default": "ollama",
          "description": "LLM provider to use"
        },
        "codeRewriter.ollamaEndpoint": {
          "type": "string",
          "default": "http://localhost:11434/api/generate",
          "description": "Endpoint for Ollama API"
        },
        "codeRewriter.ollamaModel": {
          "type": "string",
          "default": "llama2",
          "description": "Ollama model to use for code improvement"
        },
        "codeRewriter.openaiApiKey": {
          "type": "string",
          "default": "",
          "description": "API key for OpenAI"
        },
        "codeRewriter.openaiModel": {
          "type": "string",
          "default": "gpt-3.5-turbo",
          "description": "OpenAI model"
        },
        "codeRewriter.openaiEndpoint": {
          "type": "string",
          "default": "https://api.openai.com/v1/chat/completions",
          "description": "OpenAI endpoint"
        },
        "codeRewriter.grokEndpoint": {
          "type": "string",
          "default": "",
          "description": "Endpoint for Grok API"
        },
        "codeRewriter.grokApiKey": {
          "type": "string",
          "default": "",
          "description": "API key for Grok"
        },
        "codeRewriter.grokModel": {
          "type": "string",
          "default": "latest",
          "description": "Grok model"
        },
        "codeRewriter.claudeEndpoint": {
          "type": "string",
          "default": "",
          "description": "Endpoint for Claude API"
        },
        "codeRewriter.claudeApiKey": {
          "type": "string",
          "default": "",
          "description": "API key for Claude"
        },
        "codeRewriter.claudeModel": {
          "type": "string",
          "default": "claude-3-opus-20240229",
          "description": "Claude model"
        }
      }
    }
  },



  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "^16.18.34",
    "@types/vscode": "^1.60.0",
    "@typescript-eslint/eslint-plugin": "^5.59.8",
    "@typescript-eslint/parser": "^5.59.8",
    "eslint": "^8.41.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "ts-loader": "^9.4.3",
    "typescript": "^5.1.3",
    "webpack": "^5.85.0",
    "webpack-cli": "^5.1.1"
  },
  "dependencies": {
    "axios": "^1.4.0"
  }
}
